// <auto-generated />
using System;
using CoreValidatorExample.DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreValidatorExample.DataAccessLayer.Migrations
{
    [DbContext(typeof(CoreLoanValidatorExampleDbContext))]
    [Migration("20241123175020_Update20241122")]
    partial class Update20241122
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Appraisal", b =>
                {
                    b.Property<int>("AppraisalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppraisalId"));

                    b.Property<decimal>("AppraisalScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AppraiserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("MandatoryField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AppraisalId");

                    b.HasIndex("AssetId");

                    b.HasIndex("ProposalId");

                    b.ToTable("Appraisals");

                    b.HasData(
                        new
                        {
                            AppraisalId = 1,
                            AppraisalScore = 85.5m,
                            AppraiserName = "Appraiser 1",
                            AssetId = 1,
                            MandatoryField = "Field 1",
                            ProposalId = 1,
                            Status = 1,
                            SubmissionDate = new DateTime(2024, 11, 23, 17, 50, 18, 955, DateTimeKind.Local).AddTicks(6913)
                        },
                        new
                        {
                            AppraisalId = 2,
                            AppraisalScore = 90.0m,
                            AppraiserName = "Appraiser 2",
                            AssetId = 2,
                            MandatoryField = "Field 2",
                            ProposalId = 2,
                            Status = 2,
                            SubmissionDate = new DateTime(2024, 11, 23, 17, 50, 18, 955, DateTimeKind.Local).AddTicks(8560)
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AssetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CollateralId")
                        .HasColumnType("int");

                    b.HasKey("AssetId");

                    b.HasIndex("CollateralId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            AssetId = 1,
                            AssetName = "House Asset",
                            AssetValue = 300000m,
                            CollateralId = 1
                        },
                        new
                        {
                            AssetId = 2,
                            AssetName = "Car Asset",
                            AssetValue = 35000m,
                            CollateralId = 2
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Collateral", b =>
                {
                    b.Property<int>("CollateralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollateralId"));

                    b.Property<string>("CollateralDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollateralValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId1")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("CollateralId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("LoanId");

                    b.ToTable("Collaterals");

                    b.HasData(
                        new
                        {
                            CollateralId = 1,
                            CollateralDescription = "House",
                            CollateralValue = 300000m,
                            CustomerId = 1,
                            LoanId = 1
                        },
                        new
                        {
                            CollateralId = 2,
                            CollateralDescription = "Car",
                            CollateralValue = 35000m,
                            CustomerId = 2,
                            LoanId = 2
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerName = "John Doe"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerName = "Jane Smith"
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Decision", b =>
                {
                    b.Property<int>("DecisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DecisionId"));

                    b.Property<DateTime>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Outcome")
                        .HasColumnType("int");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DecisionId");

                    b.HasIndex("ProposalId");

                    b.ToTable("Decisions");

                    b.HasData(
                        new
                        {
                            DecisionId = 1,
                            DecisionDate = new DateTime(2024, 11, 23, 17, 50, 18, 956, DateTimeKind.Local).AddTicks(47),
                            Outcome = 2,
                            ProposalId = 1,
                            Reason = "Reason 1"
                        },
                        new
                        {
                            DecisionId = 2,
                            DecisionDate = new DateTime(2024, 11, 23, 17, 50, 18, 956, DateTimeKind.Local).AddTicks(640),
                            Outcome = 3,
                            ProposalId = 2,
                            Reason = "Reason 2"
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("LoanDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LoanId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            CustomerId = 1,
                            LoanDescription = "Home Loan",
                            LoanValue = 250000m
                        },
                        new
                        {
                            LoanId = 2,
                            CustomerId = 2,
                            LoanDescription = "Car Loan",
                            LoanValue = 30000m
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Proposal", b =>
                {
                    b.Property<int>("ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ProponentBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProposalId");

                    b.ToTable("Proposals");

                    b.HasData(
                        new
                        {
                            ProposalId = 1,
                            Amount = 100000m,
                            ProponentBirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            SubmissionDate = new DateTime(2024, 11, 23, 17, 50, 18, 950, DateTimeKind.Local).AddTicks(8514),
                            Title = "Proposal 1"
                        },
                        new
                        {
                            ProposalId = 2,
                            Amount = 200000m,
                            ProponentBirthDate = new DateTime(1990, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            SubmissionDate = new DateTime(2024, 11, 23, 17, 50, 18, 955, DateTimeKind.Local).AddTicks(4983),
                            Title = "Proposal 2"
                        });
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Appraisal", b =>
                {
                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Proposal", "Proposal")
                        .WithMany()
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Asset", b =>
                {
                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Collateral", "Collateral")
                        .WithMany("AssetIdList")
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Collateral");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Collateral", b =>
                {
                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Customer", null)
                        .WithMany("CollateralList")
                        .HasForeignKey("CustomerId1");

                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Loan", "Loan")
                        .WithMany("CollateralList")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Decision", b =>
                {
                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Proposal", "Proposal")
                        .WithMany()
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Loan", b =>
                {
                    b.HasOne("CoreValidatorExample.DataAccessLayer.Data.Customer", "Customer")
                        .WithMany("LoanList")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Collateral", b =>
                {
                    b.Navigation("AssetIdList");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Customer", b =>
                {
                    b.Navigation("CollateralList");

                    b.Navigation("LoanList");
                });

            modelBuilder.Entity("CoreValidatorExample.DataAccessLayer.Data.Loan", b =>
                {
                    b.Navigation("CollateralList");
                });
#pragma warning restore 612, 618
        }
    }
}
